// Encode downlink data from incoming downlink message
// payload - downlink message json
// metadata - key/value object

/** Encoder **/

var data = {};

// Process updated attributes
data.temp = payload.updatedAttributes.temperature.value;
data.hum = payload.updatedAttributes.humidity.value;

// Process deleted attributes
if (payload.deletedAttributes.length) {
    data.removed = payload.deletedAttributes;
}

// Process RPC calls
if (payload.rpcCalls.length) {
    data.commands = [];
    for (var i = 0; i < payload.rpcCalls.length; i++) {
        var rpcCall = payload.rpcCalls[i];
        var command = {
            type: rpcCall.method,
            args: JSON.parse(rpcCall.params)
        };
        data.commands.push(command);
    }
}

// Result object with encoded downlink payload
var result = {

    // downlink data content type: JSON, TEXT or BINARY (base64 format)
    contentType: "JSON",

    // downlink data
    data: JSON.stringify(data),

    // Optional metadata object presented in key/value format
    metadata: {
            topic: payload.deviceType+'/'+payload.deviceName+'/upload'
    }

};

return result;